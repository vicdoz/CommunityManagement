
Drop table Comunidad if exists cascade;
Drop table Inmueble if exists cascade;
Drop table Factura if exists cascade;
Drop table LineaFactura if exists cascade;
Drop table Concepto if exists cascade;
Drop table Carta if exists cascade;
Drop table NotaInformativa if exists cascade;
Drop table ReciboInmueble if exists cascade;
Drop table Propietario if exists cascade;


CREATE TABLE Carta (
       idCarta INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , cuerpo CHAR(50)
     , fecha CHAR(20)
     ,PRIMARY KEY (idCarta)
);


CREATE TABLE Concepto (
	   idConcepto INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , codigo CHAR(50) 
     , Descripcion CHAR(50)
     , PRIMARY KEY (idConcepto)
);

CREATE TABLE Propietario (
       nif CHAR(10)
     , idPropietario INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , Nombre CHAR(50)
     , Direccion CHAR(50)
     , Poblacion CHAR(50)
     , Telefono CHAR(9)
     , email CHAR(20)
     , Observaciones CHAR(50)
     , FechaAlta CHAR(20)
     , Entidad INTEGER
     , NumeroCuenta INTEGER
     , PRIMARY KEY (idPropietario)
);
CREATE TABLE Comunidad (
	   idComunidad INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , nombre CHAR(50)
     , calle CHAR(50)
     , poblacion CHAR(50)
     , MaxRecibosPendientes INTEGER
     , Estado CHAR(25)
     , idpresidente INTEGER 
     , PRIMARY KEY (idComunidad)
);
CREATE TABLE NotaInformativa (
       idNotaInformativa INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , FechaCalculo CHAR(20)
     , ImporteNota FLOAT
     , PRIMARY KEY (idNotaInformativa)  
     , idComunidad INTEGER  
     , FOREIGN KEY (idComunidad)
                  REFERENCES Comunidad (idComunidad) 
);

CREATE TABLE Factura (
       idFactura INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , FechaFactura CHAR(20)
     , CIF integer
     , idComunidad INTEGER
     , tipoIVA FLOAT
     , importeSinIva FLOAT
     , importeConIva FLOAT
     , idNotaInformativa INTEGER 
     , PRIMARY KEY (idFactura)
     ,  FOREIGN KEY (idNotaInformativa)
                  REFERENCES NotaInformativa (idNotaInformativa)
     , FOREIGN KEY (idComunidad)
                  REFERENCES Comunidad (idComunidad) 
);
CREATE TABLE LineaFactura (
	   idLineaFactura INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)	
     , ImporteLinea FLOAT NOT NULL 
     , ClaveConcepto INTEGER 
     , idFactura INTEGER
     , PRIMARY KEY (idLineaFactura)
     , FOREIGN KEY (ClaveConcepto)
                  REFERENCES Concepto (idConcepto)
    , FOREIGN KEY (idFactura)
                  REFERENCES Factura (idFactura)
);


CREATE TABLE Inmueble (
       IdInmueble INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , Escalera CHAR(10)
     , Piso CHAR(10)
     , Puerta CHAR(10)
     , Porcentaje FLOAT
     , idPropietario INTEGER 
     , idComunidad INTEGER
	 , PRIMARY KEY (IdInmueble)
     , FOREIGN KEY (idPropietario)
                  REFERENCES Propietario (idPropietario)
     , FOREIGN KEY (idComunidad)
                  REFERENCES Comunidad (idComunidad) ON DELETE CASCADE
);
CREATE TABLE ReciboInmueble (
       idRecibo INTEGER  GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1)
     , FechaPago CHAR(20)
     , Importe FLOAT
     , PRIMARY KEY (idRecibo)
     , idCarta INTEGER
     , idInmueble INTEGER
     , idNotaInformativa INTEGER
     , FOREIGN KEY (idCarta)
                  REFERENCES Carta (idCarta)
     , FOREIGN KEY (idInmueble)
                  REFERENCES Inmueble (idInmueble)
	 , FOREIGN KEY (idNotaInformativa)
                  REFERENCES NotaInformativa (idNotaInformativa)
);
 CREATE TRIGGER trigComunidad AFTER DELETE ON Comunidad 
    delete from inmueble where idcomunidad is null;
 
 CREATE TRIGGER trigFactura AFTER DELETE ON Factura 
    delete from LineaFactura where idFactura is null;



